[package]
name = "tower-resilience"
version = "0.3.5"
edition = "2021"
rust-version.workspace = true
readme = "../../README.md"
license = "MIT OR Apache-2.0"
authors = ["Josh Rotenberg <joshrotenberg@gmail.com>"]
description = "Composable resilience and fault-tolerance middleware for Tower services"
repository = "https://github.com/joshrotenberg/tower-resilience"
keywords = ["tower", "resilience", "circuit-breaker", "bulkhead", "middleware"]
categories = ["asynchronous", "network-programming"]

[dependencies]
# Core is always included
tower-resilience-core = { workspace = true }

# Optional pattern dependencies
tower-resilience-circuitbreaker = { version = "0.4.5", path = "../tower-resilience-circuitbreaker", optional = true }
tower-resilience-bulkhead = { version = "0.4.5", path = "../tower-resilience-bulkhead", optional = true }
tower-resilience-timelimiter = { version = "0.3.5", path = "../tower-resilience-timelimiter", optional = true }
tower-resilience-cache = { version = "0.3.5", path = "../tower-resilience-cache", optional = true }
tower-resilience-retry = { version = "0.4.5", path = "../tower-resilience-retry", optional = true }
tower-resilience-ratelimiter = { version = "0.4.5", path = "../tower-resilience-ratelimiter", optional = true }

[features]
default = []
# Individual patterns
circuitbreaker = ["dep:tower-resilience-circuitbreaker"]
bulkhead = ["dep:tower-resilience-bulkhead"]
timelimiter = ["dep:tower-resilience-timelimiter"]
cache = ["dep:tower-resilience-cache"]
retry = ["dep:tower-resilience-retry"]
ratelimiter = ["dep:tower-resilience-ratelimiter"]
# Enable all patterns
full = ["circuitbreaker", "bulkhead", "timelimiter", "cache", "retry", "ratelimiter"]

[dev-dependencies]
tokio = { version = "1", features = ["macros", "rt-multi-thread", "time"] }
tower = { version = "0.5", features = ["util"] }

[[example]]
name = "combined"
required-features = ["circuitbreaker", "bulkhead"]

[[example]]
name = "full_stack"
required-features = ["full"]
